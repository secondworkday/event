#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.Library
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class AppDC : MS.WebUtility.WebUtilityDC
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertParticipantGroup(ParticipantGroup instance);
    partial void UpdateParticipantGroup(ParticipantGroup instance);
    partial void DeleteParticipantGroup(ParticipantGroup instance);
    partial void InsertParticipant(Participant instance);
    partial void UpdateParticipant(Participant instance);
    partial void DeleteParticipant(Participant instance);
    #endregion
		
		public AppDC(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AppDC(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AppDC(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AppDC(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ParticipantGroup> ParticipantGroups
		{
			get
			{
				return this.GetTable<ParticipantGroup>();
			}
		}
		
		public System.Data.Linq.Table<Participant> Participants
		{
			get
			{
				return this.GetTable<Participant>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParticipantGroup")]
	public partial class ParticipantGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private global::MS.Utility.ExtendedPropertyScopeType _ScopeType;
		
		private System.Nullable<int> _ScopeID;
		
		private System.DateTime _CreatedTimestamp;
		
		private System.DateTime _LastModifiedTimestamp;
		
		private string _Name;
		
		private string _Overview;
		
		private EntitySet<Participant> _Participants;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnScopeTypeChanging(global::MS.Utility.ExtendedPropertyScopeType value);
    partial void OnScopeTypeChanged();
    partial void OnScopeIDChanging(System.Nullable<int> value);
    partial void OnScopeIDChanged();
    partial void OnCreatedTimestampChanging(System.DateTime value);
    partial void OnCreatedTimestampChanged();
    partial void OnLastModifiedTimestampChanging(System.DateTime value);
    partial void OnLastModifiedTimestampChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOverviewChanging(string value);
    partial void OnOverviewChanged();
    #endregion
		
		public ParticipantGroup()
		{
			this._Participants = new EntitySet<Participant>(new Action<Participant>(this.attach_Participants), new Action<Participant>(this.detach_Participants));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeType", DbType="Int NOT NULL", CanBeNull=false)]
		public global::MS.Utility.ExtendedPropertyScopeType ScopeType
		{
			get
			{
				return this._ScopeType;
			}
			set
			{
				if ((this._ScopeType != value))
				{
					this.OnScopeTypeChanging(value);
					this.SendPropertyChanging();
					this._ScopeType = value;
					this.SendPropertyChanged("ScopeType");
					this.OnScopeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeID", DbType="Int")]
		public System.Nullable<int> ScopeID
		{
			get
			{
				return this._ScopeID;
			}
			set
			{
				if ((this._ScopeID != value))
				{
					this.OnScopeIDChanging(value);
					this.SendPropertyChanging();
					this._ScopeID = value;
					this.SendPropertyChanged("ScopeID");
					this.OnScopeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedTimestamp", DbType="DATETIME2 NOT NULL")]
		public System.DateTime CreatedTimestamp
		{
			get
			{
				return this._CreatedTimestamp;
			}
			set
			{
				if ((this._CreatedTimestamp != value))
				{
					this.OnCreatedTimestampChanging(value);
					this.SendPropertyChanging();
					this._CreatedTimestamp = value;
					this.SendPropertyChanged("CreatedTimestamp");
					this.OnCreatedTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedTimestamp", DbType="DATETIME2 NOT NULL")]
		public System.DateTime LastModifiedTimestamp
		{
			get
			{
				return this._LastModifiedTimestamp;
			}
			set
			{
				if ((this._LastModifiedTimestamp != value))
				{
					this.OnLastModifiedTimestampChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedTimestamp = value;
					this.SendPropertyChanged("LastModifiedTimestamp");
					this.OnLastModifiedTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overview", DbType="nvarchar(MAX)")]
		public string Overview
		{
			get
			{
				return this._Overview;
			}
			set
			{
				if ((this._Overview != value))
				{
					this.OnOverviewChanging(value);
					this.SendPropertyChanging();
					this._Overview = value;
					this.SendPropertyChanged("Overview");
					this.OnOverviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ParticipantGroup_Participant", Storage="_Participants", ThisKey="ID", OtherKey="ParticipantGroupID")]
		public EntitySet<Participant> Participants
		{
			get
			{
				return this._Participants;
			}
			set
			{
				this._Participants.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Participants(Participant entity)
		{
			this.SendPropertyChanging();
			entity.ParticipantGroup = this;
		}
		
		private void detach_Participants(Participant entity)
		{
			this.SendPropertyChanging();
			entity.ParticipantGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Participant")]
	public partial class Participant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private global::MS.Utility.ExtendedPropertyScopeType _ScopeType;
		
		private System.Nullable<int> _ScopeID;
		
		private System.DateTime _CreatedTimestamp;
		
		private System.DateTime _LastModifiedTimestamp;
		
		private System.Nullable<uint> _Grade;
		
		private string _Name;
		
		private string _Overview;
		
		private int _ParticipantGroupID;
		
		private EntityRef<ParticipantGroup> _ParticipantGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnScopeTypeChanging(global::MS.Utility.ExtendedPropertyScopeType value);
    partial void OnScopeTypeChanged();
    partial void OnScopeIDChanging(System.Nullable<int> value);
    partial void OnScopeIDChanged();
    partial void OnCreatedTimestampChanging(System.DateTime value);
    partial void OnCreatedTimestampChanged();
    partial void OnLastModifiedTimestampChanging(System.DateTime value);
    partial void OnLastModifiedTimestampChanged();
    partial void OnGradeChanging(System.Nullable<uint> value);
    partial void OnGradeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOverviewChanging(string value);
    partial void OnOverviewChanged();
    partial void OnParticipantGroupIDChanging(int value);
    partial void OnParticipantGroupIDChanged();
    #endregion
		
		public Participant()
		{
			this._ParticipantGroup = default(EntityRef<ParticipantGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeType", DbType="Int NOT NULL", CanBeNull=false)]
		public global::MS.Utility.ExtendedPropertyScopeType ScopeType
		{
			get
			{
				return this._ScopeType;
			}
			set
			{
				if ((this._ScopeType != value))
				{
					this.OnScopeTypeChanging(value);
					this.SendPropertyChanging();
					this._ScopeType = value;
					this.SendPropertyChanged("ScopeType");
					this.OnScopeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeID", DbType="Int")]
		public System.Nullable<int> ScopeID
		{
			get
			{
				return this._ScopeID;
			}
			set
			{
				if ((this._ScopeID != value))
				{
					this.OnScopeIDChanging(value);
					this.SendPropertyChanging();
					this._ScopeID = value;
					this.SendPropertyChanged("ScopeID");
					this.OnScopeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedTimestamp", DbType="DATETIME2 NOT NULL")]
		public System.DateTime CreatedTimestamp
		{
			get
			{
				return this._CreatedTimestamp;
			}
			set
			{
				if ((this._CreatedTimestamp != value))
				{
					this.OnCreatedTimestampChanging(value);
					this.SendPropertyChanging();
					this._CreatedTimestamp = value;
					this.SendPropertyChanged("CreatedTimestamp");
					this.OnCreatedTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedTimestamp", DbType="DATETIME2 NOT NULL")]
		public System.DateTime LastModifiedTimestamp
		{
			get
			{
				return this._LastModifiedTimestamp;
			}
			set
			{
				if ((this._LastModifiedTimestamp != value))
				{
					this.OnLastModifiedTimestampChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedTimestamp = value;
					this.SendPropertyChanged("LastModifiedTimestamp");
					this.OnLastModifiedTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int")]
		public System.Nullable<uint> Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overview", DbType="nvarchar(MAX)")]
		public string Overview
		{
			get
			{
				return this._Overview;
			}
			set
			{
				if ((this._Overview != value))
				{
					this.OnOverviewChanging(value);
					this.SendPropertyChanging();
					this._Overview = value;
					this.SendPropertyChanged("Overview");
					this.OnOverviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantGroupID", DbType="Int NOT NULL")]
		public int ParticipantGroupID
		{
			get
			{
				return this._ParticipantGroupID;
			}
			set
			{
				if ((this._ParticipantGroupID != value))
				{
					if (this._ParticipantGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParticipantGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ParticipantGroupID = value;
					this.SendPropertyChanged("ParticipantGroupID");
					this.OnParticipantGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ParticipantGroup_Participant", Storage="_ParticipantGroup", ThisKey="ParticipantGroupID", OtherKey="ID", IsForeignKey=true)]
		public ParticipantGroup ParticipantGroup
		{
			get
			{
				return this._ParticipantGroup.Entity;
			}
			set
			{
				ParticipantGroup previousValue = this._ParticipantGroup.Entity;
				if (((previousValue != value) 
							|| (this._ParticipantGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParticipantGroup.Entity = null;
						previousValue.Participants.Remove(this);
					}
					this._ParticipantGroup.Entity = value;
					if ((value != null))
					{
						value.Participants.Add(this);
						this._ParticipantGroupID = value.ID;
					}
					else
					{
						this._ParticipantGroupID = default(int);
					}
					this.SendPropertyChanged("ParticipantGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
